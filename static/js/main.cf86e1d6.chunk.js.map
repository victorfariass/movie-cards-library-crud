{"version":3,"sources":["images/Appleseed_Alpha.jpg","images/Final_Fantasy_Spirits_Within.jpg","images/Ghost_In_The_Shell_2_0.jpg","images/Kingsglaive_Final_Fantasy_XV.jpg","images/Resident_Evil_Vendetta.jpg","components/Loading.js","components/MovieForm.js","components/MovieCard.js","components/Header.js","images/index.js","services/movieData.js","services/movieAPI.js","pages/EditMovie.js","pages/MovieDetails.js","pages/MovieList.js","pages/NewMovie.js","pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Loading","Component","MovieForm","props","state","movie","handleSubmit","bind","onSubmit","this","field","newValue","setState","title","htmlFor","placeholder","id","type","className","value","onChange","event","updateMovie","target","subtitle","imagePath","storyline","genre","rating","step","min","max","onClick","renderTitleInput","renderSubtitleInput","renderImagePathInput","renderStorylineInput","renderGenreSelection","renderRatingInput","renderSubmitButton","React","defaultProps","MovieCard","data-testid","alt","src","to","appleseedAlpha","finalFantasySpiritsWithin","ghostInTheShell20","kingsglaiveFinalFantasyXV","residentEvilVendetta","movies","images","bookmarked","localStorage","setItem","JSON","stringify","data","readMovies","parse","getItem","saveMovies","simulateRequest","response","callback","setTimeout","getMovie","movieId","find","mov","parseInt","Promise","resolve","updatedMovie","map","createMovie","movieData","nextId","length","newMovie","deleteMovie","filter","status","EditMovie","shouldRedirect","match","params","movieAPI","then","result","a","exact","MovieDetails","handleClick","MovieList","key","NewMovie","created","NotFound","App","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf86e1d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Appleseed_Alpha.498ae78a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Final_Fantasy_Spirits_Within.0d8b80ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Ghost_In_The_Shell_2_0.7d6b4f9c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Kingsglaive_Final_Fantasy_XV.917daac0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Resident_Evil_Vendetta.77c10ef3.jpg\";","import React, { Component } from 'react';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div>Carregando...</div>\n    );\n  }\n}\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass MovieForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...props.movie };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    const { onSubmit } = this.props;\n    onSubmit(this.state);\n  }\n\n  updateMovie(field, newValue) {\n    this.setState({ [field]: newValue });\n  }\n\n  renderTitleInput() {\n    const { title } = this.state;\n\n    return (\n      <div>\n        <label htmlFor=\"movie_title\">\n          <input\n            placeholder=\"Insira o tÃ­tulo\"\n            id=\"movie_title\"\n            type=\"text\"\n            className=\"validate\"\n            value={ title }\n            onChange={ (event) => this.updateMovie('title', event.target.value) }\n          />\n          TÃ­tulo\n        </label>\n      </div>\n    );\n  }\n\n  renderSubtitleInput() {\n    const { subtitle } = this.state;\n\n    return (\n      <div>\n        <label htmlFor=\"movie_subtitle\">\n          <input\n            placeholder=\"Insira o subtÃ­tulo\"\n            id=\"movie_subtitle\"\n            type=\"text\"\n            value={ subtitle }\n            onChange={ (event) => this.updateMovie('subtitle', event.target.value) }\n          />\n          SubtÃ­tulo\n        </label>\n      </div>\n    );\n  }\n\n  renderImagePathInput() {\n    const { imagePath } = this.state;\n\n    return (\n      <div className=\"row\">\n        <label htmlFor=\"movie_image\">\n          <input\n            placeholder=\"Insira o caminho da imagem\"\n            id=\"movie_image\"\n            type=\"text\"\n            value={ imagePath }\n            onChange={ (event) => this.updateMovie('imagePath', event.target.value) }\n          />\n          Imagem\n        </label>\n      </div>\n    );\n  }\n\n  renderStorylineInput() {\n    const { storyline } = this.state;\n\n    return (\n      <div>\n        <label htmlFor=\"movie_storyline\">\n          <textarea\n            id=\"movie_storyline\"\n            value={ storyline }\n            onChange={ (event) => this.updateMovie('storyline', event.target.value) }\n          />\n          Sinopse\n        </label>\n      </div>\n    );\n  }\n\n  renderGenreSelection() {\n    const { genre } = this.state;\n    return (\n      <div>\n        <label htmlFor=\"movie_genre\">\n          GÃªnero\n          <select\n            id=\"movie_genre\"\n            value={ genre }\n            onChange={ (event) => this.updateMovie('genre', event.target.value) }\n          >\n            <option value=\"action\">AÃ§Ã£o</option>\n            <option value=\"comedy\">ComÃ©dia</option>\n            <option value=\"thriller\">Suspense</option>\n            <option value=\"fantasy\">Fantasia</option>\n          </select>\n        </label>\n      </div>\n    );\n  }\n\n  renderRatingInput() {\n    const { rating } = this.state;\n    return (\n      <div>\n        <label htmlFor=\"movie_rating\">\n          <input\n            placeholder=\"DÃª a avaliaÃ§Ã£o do filme\"\n            id=\"movie_rating\"\n            type=\"number\"\n            step={ 0.1 }\n            min={ 0 }\n            max={ 5 }\n            value={ rating }\n            onChange={ (event) => this.updateMovie('rating', event.target.value) }\n          />\n          AvaliaÃ§Ã£o\n        </label>\n      </div>\n    );\n  }\n\n  renderSubmitButton() {\n    return (\n      <div>\n        <button\n          type=\"button\"\n          onClick={ this.handleSubmit }\n        >\n          Submit\n        </button>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"movie-form-title\">Adicione um novo Filme</h2>\n        <form className=\"movie-form-container\">\n          {this.renderTitleInput()}\n          {this.renderSubtitleInput()}\n          {this.renderImagePathInput()}\n          {this.renderStorylineInput()}\n          {this.renderGenreSelection()}\n          {this.renderRatingInput()}\n          {this.renderSubmitButton()}\n        </form>\n      </div>\n    );\n  }\n}\n\nMovieForm.propTypes = {\n  movie: PropTypes.objectOf(PropTypes.any),\n  onSubmit: PropTypes.func.isRequired,\n};\n\nMovieForm.defaultProps = {\n  movie: {},\n};\n\nexport default MovieForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nclass MovieCard extends React.Component {\n  render() {\n    const { movie } = this.props;\n    const { id, title, subtitle, storyline, imagePath } = movie;\n    return (\n      <div data-testid=\"movie-card\" className=\"movie-card\">\n        <img alt=\"Movie Cover\" className=\"movie-card-image\" src={ imagePath } />\n        <div className=\"movie-card-body\">\n          <h4 data-testid=\"movie-card-title\" className=\"movie-card-title\">{title}</h4>\n          <h5 className=\"movie-card-subtitle\">{subtitle}</h5>\n          <p className=\"movie-card-storyline\">{storyline}</p>\n        </div>\n        <div className=\"detalhes\">\n          <Link to={ `/movies/${id}` }>VER DETALHES</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    storyline: PropTypes.string,\n    imagePath: PropTypes.string,\n  }).isRequired,\n};\n\nexport default MovieCard;\n","import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n    return (\n      <h1 className=\"header\">Movie Cards Library CRUD</h1>\n    );\n  }\n}\n\nexport default Header;\n","import appleseedAlpha from './Appleseed_Alpha.jpg';\nimport finalFantasySpiritsWithin from './Final_Fantasy_Spirits_Within.jpg';\nimport ghostInTheShell20 from './Ghost_In_The_Shell_2_0.jpg';\nimport kingsglaiveFinalFantasyXV from './Kingsglaive_Final_Fantasy_XV.jpg';\nimport residentEvilVendetta from './Resident_Evil_Vendetta.jpg';\n\nexport default {\n  appleseedAlpha,\n  finalFantasySpiritsWithin,\n  ghostInTheShell20,\n  kingsglaiveFinalFantasyXV,\n  residentEvilVendetta,\n};\n","import images from '../images/index';\n\nconst movies = [\n  {\n    id: 1,\n    title: 'Kingsglaive',\n    subtitle: 'Final Fantasy XV',\n    storyline: \"King Regis, who oversees the land of Lucis, commands his army of soldiers to protect the kingdom from the Niflheim empire's plans to steal the sacred crystal.\",\n    rating: 4.5,\n    imagePath: images.kingsglaiveFinalFantasyXV,\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    id: 2,\n    title: 'Final Fantasy',\n    subtitle: 'Spirits Within',\n    storyline: 'A scientist makes a last stand on Earth with the help of a ragtag team of soldiers against an invasion of alien phantoms.',\n    rating: 4.5,\n    imagePath: images.finalFantasySpiritsWithin,\n    bookmarked: false,\n    genre: 'fantasy',\n  },\n  {\n    id: 3,\n    title: 'Ghost In The Shell',\n    subtitle: 'Ghost In The Shell',\n    storyline: 'A hacker known as the Puppet Master is hunted by a female cyborg cop and her partner. This film is a revised version of Ghost in the Shell (1995).',\n    rating: 5,\n    imagePath: images.ghostInTheShell20,\n    bookmarked: false,\n    genre: 'comedy',\n  },\n  {\n    id: 4,\n    title: 'Appleseed Alpha',\n    subtitle: 'Appleseed Alpha',\n    storyline: \"A young female soldier Deunan and her cyborg partner Briareos survive through the post World War 3 apocalyptic New York in search of human's future hope, the legendary city of Olympus.\",\n    rating: 3.8,\n    imagePath: images.appleseedAlpha,\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    id: 5,\n    title: 'Resident Evil',\n    subtitle: 'Vendetta',\n    storyline: 'Chris Redfield enlists the help of Leon S. Kennedy and Rebecca Chambers to stop a death merchant, with a vengeance, from spreading a deadly virus in New York.',\n    rating: 4.2,\n    imagePath: images.residentEvilVendetta,\n    bookmarked: true,\n    genre: 'fantasy',\n  },\n];\n\nexport default movies;\n","import data from './movieData';\n\nlocalStorage.setItem('movies', JSON.stringify(data));\n\nconst readMovies = () => JSON.parse(localStorage.getItem('movies'));\nconst saveMovies = (movies) => localStorage.setItem('movies', JSON.stringify(movies));\n\nconst TIMEOUT = 2000;\nconst SUCCESS_STATUS = 'OK';\n\n// --------------------------------------------------------------------\n// A funÃ§Ã£o simulateRequest simula uma requisiÃ§Ã£o para uma API externa\n// Esse tipo de funÃ§Ã£o que \"chama outra funÃ§Ã£o\" Ã© chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// nÃ£o se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getMovies = () => (\n  new Promise((resolve) => {\n    const movies = readMovies();\n    simulateRequest(movies)(resolve);\n  })\n);\n\nexport const getMovie = (movieId) => {\n  const movie = readMovies().find((mov) => mov.id === parseInt(movieId, 10));\n  return new Promise((resolve) => {\n    simulateRequest(movie)(resolve);\n  });\n};\n\nexport const updateMovie = (updatedMovie) => (\n  new Promise((resolve) => {\n    const movies = readMovies().map((movie) => {\n      if (movie.id === parseInt(updatedMovie.id, 10)) {\n        return { ...movie, ...updatedMovie };\n      }\n      return movie;\n    });\n    saveMovies(movies);\n    simulateRequest(SUCCESS_STATUS)(resolve);\n  })\n);\n\nexport const createMovie = (movieData) => (\n  new Promise((resolve) => {\n    let movies = readMovies();\n    const nextId = movies[movies.length - 1].id + 1;\n    const newMovie = { ...movieData, id: nextId };\n    movies = [...movies, newMovie];\n    saveMovies(movies);\n    simulateRequest(SUCCESS_STATUS)(resolve);\n  })\n);\n\nexport const deleteMovie = (movieId) => {\n  let movies = readMovies();\n  movies = movies.filter((movie) => movie.id !== parseInt(movieId, 10));\n  saveMovies(movies);\n\n  return new Promise((resolve) => {\n    simulateRequest({ status: SUCCESS_STATUS })(resolve);\n  });\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nimport { Loading, MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'loading',\n      shouldRedirect: false,\n      movie: {},\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { match: { params: { id } } } = this.props;\n    movieAPI.getMovie(id).then((result) => this.setState({\n      movie: result,\n      status: 'loaded',\n    }));\n  }\n\n  async handleSubmit(updatedMovie) {\n    await movieAPI.updateMovie(updatedMovie);\n    this.setState({\n      shouldRedirect: true,\n    });\n  }\n\n  render() {\n    const { status, shouldRedirect, movie } = this.state;\n    if (shouldRedirect) return <Redirect exact to=\"/movie-cards-library-crud\" />;\n\n    if (status === 'loading') return <Loading />;\n\n    return (\n      <div data-testid=\"edit-movie\">\n        <MovieForm movie={ movie } onSubmit={ this.handleSubmit } />\n      </div>\n    );\n  }\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport default EditMovie;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movie: '',\n    };\n  }\n\n  componentDidMount() {\n    const { match: { params: { id } } } = this.props;\n    movieAPI.getMovie(id).then((result) => this.setState({\n      movie: result,\n    }));\n  }\n\n  async handleClick(deleteMovie) {\n    await movieAPI.deleteMovie(deleteMovie);\n  }\n\n  // eslint-disable-next-line max-lines-per-function\n  render() {\n    const { movie } = this.state;\n    const { id, title, storyline, imagePath, genre, rating, subtitle } = movie;\n    if (!movie) return <Loading />;\n\n    return (\n      <div data-testid=\"movie-details\" className=\"movie-details-container\">\n        <img alt=\"Movie Cover\" src={ `../${imagePath}` } />\n        <div className=\"movie-details-details\">\n          <p>{ `Title: ${title}`}</p>\n          <p>{ `Subtitle: ${subtitle}` }</p>\n          <p>{ `Storyline: ${storyline}` }</p>\n          <p>{ `Genre: ${genre}` }</p>\n          <p>{ `Rating: ${rating}` }</p>\n        </div>\n        <div className=\"movie-details-buttons\">\n          <Link to={ `/movies/${id}/edit` }>EDITAR</Link>\n          <Link to=\"/movie-cards-library-crud\">VOLTAR</Link>\n          <Link\n            to=\"/movie-cards-library-crud\"\n            onClick={ () => this.handleClick(id) }\n          >\n            DELETAR\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport default MovieDetails;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Loading } from '../components';\nimport MovieCard from '../components/MovieCard';\n\nimport * as movieAPI from '../services/movieAPI';\n\nclass MovieList extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movies: [],\n    };\n  }\n\n  componentDidMount() {\n    movieAPI.getMovies().then((result) => this.setState({\n      movies: result,\n    }));\n  }\n\n  render() {\n    const { movies } = this.state;\n    if (!movies.length) return <Loading />;\n\n    return (\n      <div>\n        <div data-testid=\"movie-list\" className=\"movie-list\">\n          {movies.map((movie) => <MovieCard key={ movie.title } movie={ movie } />)}\n        </div>\n        <div className=\"adicionar-container\">\n          <Link to=\"/movies/new\" className=\"adicionar\">ADICIONAR CARTÃO</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieList;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport MovieForm from '../components/MovieForm';\nimport * as movieAPI from '../services/movieAPI';\n\nclass NewMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      created: false,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async handleSubmit(newMovie) {\n    await movieAPI.createMovie(newMovie);\n    this.setState({\n      created: true,\n    });\n  }\n\n  render() {\n    const { created } = this.state;\n    if (created) return <Redirect exact to=\"/movie-cards-library-crud\" />;\n    return (\n      <div data-testid=\"new-movie\">\n        <MovieForm onSubmit={ this.handleSubmit } />\n      </div>\n    );\n  }\n}\nexport default NewMovie;\n","import React, { Component } from 'react';\n\nclass NotFound extends Component {\n  render() {\n    return <div data-testid=\"404-error\">PÃ¡gina nÃ£o encontrada</div>;\n  }\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport {\n  MovieList,\n  MovieDetails,\n  NewMovie,\n  EditMovie,\n  NotFound,\n} from './pages';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/movie-cards-library-crud\" component={ MovieList } />\n        <Route path=\"/movies/new\" component={ NewMovie } />\n        <Route path=\"/movies/:id/edit\" component={ EditMovie } />\n        <Route path=\"/movies/:id\" component={ MovieDetails } />\n        <Route component={ NotFound } />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}